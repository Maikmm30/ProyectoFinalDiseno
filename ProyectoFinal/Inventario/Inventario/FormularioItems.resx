<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>